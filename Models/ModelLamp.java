/*******************************************************************************
 * @author Reika Kalseki
 * 
 * Copyright 2013
 * 
 * All rights reserved.
 * Distribution of the software in any form is only allowed with
 * explicit, prior permission from the owner.
 ******************************************************************************/
// Date: 12/02/2013 11:40:28 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package Reika.RotaryCraft.Models;

import java.util.List;

import net.minecraft.client.model.ModelRenderer;
import Reika.RotaryCraft.Base.RotaryModelBase;

public class ModelLamp extends RotaryModelBase
{
  //fields
    ModelRenderer Shape1;
    ModelRenderer Shape2;
    ModelRenderer Shape3;
    ModelRenderer Shape4;
    ModelRenderer Shape5;
    ModelRenderer Shape6;
    ModelRenderer Shape7;
    ModelRenderer Shape8;
    ModelRenderer Shape9;
    ModelRenderer Shape10;
    ModelRenderer Shape11;
    ModelRenderer Shape12;
    ModelRenderer Shape13;
    ModelRenderer Shape14;
    ModelRenderer Shape15;
    ModelRenderer Shape16;
  
  public ModelLamp()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      Shape1 = new ModelRenderer(this, 0, 0);
      Shape1.addBox(0F, 0F, 0F, 16, 1, 16);
      Shape1.setRotationPoint(-8F, 23F, -8F);
      Shape1.setTextureSize(128, 128);
      Shape1.mirror = true;
      setRotation(Shape1, 0F, 0F, 0F);
      Shape2 = new ModelRenderer(this, 64, 27);
      Shape2.addBox(0F, 0F, 0F, 14, 14, 8);
      Shape2.setRotationPoint(-7F, 10F, -2F);
      Shape2.setTextureSize(128, 128);
      Shape2.mirror = true;
      setRotation(Shape2, 0F, 0F, 0F);
      Shape3 = new ModelRenderer(this, 0, 58);
      Shape3.addBox(0F, 0F, 0F, 2, 12, 4);
      Shape3.setRotationPoint(-6F, 11F, -6F);
      Shape3.setTextureSize(128, 128);
      Shape3.mirror = true;
      setRotation(Shape3, 0F, 0F, 0F);
      Shape4 = new ModelRenderer(this, 0, 58);
      Shape4.addBox(0F, 0F, 0F, 2, 12, 4);
      Shape4.setRotationPoint(4F, 11F, -6F);
      Shape4.setTextureSize(128, 128);
      Shape4.mirror = true;
      setRotation(Shape4, 0F, 0F, 0F);
      Shape5 = new ModelRenderer(this, 0, 52);
      Shape5.addBox(0F, 0F, 0F, 8, 2, 4);
      Shape5.setRotationPoint(-4F, 11F, -6F);
      Shape5.setTextureSize(128, 128);
      Shape5.mirror = true;
      setRotation(Shape5, 0F, 0F, 0F);
      Shape6 = new ModelRenderer(this, 0, 52);
      Shape6.addBox(0F, 0F, 0F, 8, 2, 4);
      Shape6.setRotationPoint(-4F, 21F, -6F);
      Shape6.setTextureSize(128, 128);
      Shape6.mirror = true;
      setRotation(Shape6, 0F, 0F, 0F);
      Shape7 = new ModelRenderer(this, 12, 58);
      Shape7.addBox(0F, 0F, 0F, 1, 10, 2);
      Shape7.setRotationPoint(4F, 12F, -8F);
      Shape7.setTextureSize(128, 128);
      Shape7.mirror = true;
      setRotation(Shape7, 0F, 0F, 0F);
      Shape8 = new ModelRenderer(this, 12, 58);
      Shape8.addBox(0F, 0F, 0F, 1, 10, 2);
      Shape8.setRotationPoint(-5F, 12F, -8F);
      Shape8.setTextureSize(128, 128);
      Shape8.mirror = true;
      setRotation(Shape8, 0F, 0F, 0F);
      Shape9 = new ModelRenderer(this, 32, 54);
      Shape9.addBox(0F, 0F, 0F, 8, 1, 2);
      Shape9.setRotationPoint(-4F, 12F, -8F);
      Shape9.setTextureSize(128, 128);
      Shape9.mirror = true;
      setRotation(Shape9, 0F, 0F, 0F);
      Shape10 = new ModelRenderer(this, 32, 54);
      Shape10.addBox(0F, 0F, 0F, 8, 1, 2);
      Shape10.setRotationPoint(-4F, 21F, -8F);
      Shape10.setTextureSize(128, 128);
      Shape10.mirror = true;
      setRotation(Shape10, 0F, 0F, 0F);
      Shape11 = new ModelRenderer(this, 64, 49);
      Shape11.addBox(0F, 0F, 0F, 12, 12, 2);
      Shape11.setRotationPoint(-6F, 11F, 6F);
      Shape11.setTextureSize(128, 128);
      Shape11.mirror = true;
      setRotation(Shape11, 0F, 0F, 0F);
      Shape12 = new ModelRenderer(this, 32, 57);
      Shape12.addBox(0F, 0F, 0F, 8, 1, 2);
      Shape12.setRotationPoint(-4F, 20F, -6F);
      Shape12.setTextureSize(128, 128);
      Shape12.mirror = true;
      setRotation(Shape12, 0F, 0F, 0F);
      Shape13 = new ModelRenderer(this, 32, 57);
      Shape13.addBox(0F, 0F, 0F, 8, 1, 2);
      Shape13.setRotationPoint(-4F, 13F, -6F);
      Shape13.setTextureSize(128, 128);
      Shape13.mirror = true;
      setRotation(Shape13, 0F, 0F, 0F);
      Shape14 = new ModelRenderer(this, 20, 24);
      Shape14.addBox(0F, 0F, 0F, 1, 6, 2);
      Shape14.setRotationPoint(-4F, 14F, -6F);
      Shape14.setTextureSize(128, 128);
      Shape14.mirror = true;
      setRotation(Shape14, 0F, 0F, 0F);
      Shape15 = new ModelRenderer(this, 20, 24);
      Shape15.addBox(0F, 0F, 0F, 1, 6, 2);
      Shape15.setRotationPoint(3F, 14F, -6F);
      Shape15.setTextureSize(128, 128);
      Shape15.mirror = true;
      setRotation(Shape15, 0F, 0F, 0F);
      Shape16 = new ModelRenderer(this, -1, 45);
      Shape16.addBox(0F, 0F, 0F, 6, 6, 1);
      Shape16.setRotationPoint(-3F, 14F, -4F);
      Shape16.setTextureSize(128, 128);
      Shape16.mirror = true;
      setRotation(Shape16, 0F, 0F, 0F);
  }
  
  public void renderAll(List li, float phi)
  {
	  boolean vertical = (Boolean)li.get(0);
	  if (!vertical)
		  this.Shape1.render(f5);
      this.Shape2.render(f5);
      this.Shape3.render(f5);
      this.Shape4.render(f5);
      this.Shape5.render(f5);
      this.Shape6.render(f5);
      this.Shape7.render(f5);
      this.Shape8.render(f5);
      this.Shape9.render(f5);
      this.Shape10.render(f5);
      this.Shape11.render(f5);
      this.Shape12.render(f5);
      this.Shape13.render(f5);
      this.Shape14.render(f5);
      this.Shape15.render(f5);
      this.Shape16.render(f5);
  }

}
