/*******************************************************************************
 * @author Reika Kalseki
 * 
 * Copyright 2013
 * 
 * All rights reserved.
 * Distribution of the software in any form is only allowed with
 * explicit, prior permission from the owner.
 ******************************************************************************/
// Date: 14/02/2013 10:18:33 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package Reika.RotaryCraft.Models;

import java.util.List;

import net.minecraft.client.model.ModelRenderer;
import Reika.RotaryCraft.Base.RotaryModelBase;

public class ModelReservoir extends RotaryModelBase
{
	//fields
	ModelRenderer Shape1;
	ModelRenderer Shape2;
	ModelRenderer Shape3;
	ModelRenderer Shape4;
	ModelRenderer Shape5;
	ModelRenderer Shape6;

	ModelRenderer Shape5a;
	ModelRenderer Shape5b;
	ModelRenderer Shape5c;
	ModelRenderer Shape5d;
	ModelRenderer Shape5e;
	ModelRenderer Shape5f;
	ModelRenderer Shape5g;
	ModelRenderer Shape5h;
	ModelRenderer Shape5i;
	ModelRenderer Shape5j;
	ModelRenderer Shape5k;
	ModelRenderer Shape5l;
	ModelRenderer Shape5m;

	public ModelReservoir()
	{
		textureWidth = 128;
		textureHeight = 128;

		Shape1 = new ModelRenderer(this, 56, 0);
		Shape1.addBox(0F, 0F, 0F, 1, 16, 16);
		Shape1.setRotationPoint(-8F, 8F, -8F);
		Shape1.setTextureSize(128, 128);
		Shape1.mirror = true;
		this.setRotation(Shape1, 0F, 0F, 0F);
		Shape2 = new ModelRenderer(this, 56, 0);
		Shape2.addBox(0F, 0F, 0F, 1, 16, 16);
		Shape2.setRotationPoint(7F, 8F, -8F);
		Shape2.setTextureSize(128, 128);
		Shape2.mirror = true;
		this.setRotation(Shape2, 0F, 0F, 0F);
		Shape3 = new ModelRenderer(this, 0, 0);
		Shape3.addBox(0F, 0F, 0F, 14, 16, 1);
		Shape3.setRotationPoint(-7F, 8F, 7F);
		Shape3.setTextureSize(128, 128);
		Shape3.mirror = true;
		this.setRotation(Shape3, 0F, 0F, 0F);
		Shape4 = new ModelRenderer(this, 0, 0);
		Shape4.addBox(0F, 0F, 0F, 14, 16, 1);
		Shape4.setRotationPoint(-7F, 8F, -8F);
		Shape4.setTextureSize(128, 128);
		Shape4.mirror = true;
		this.setRotation(Shape4, 0F, 0F, 0F);
		Shape5 = new ModelRenderer(this, 0, 17);
		Shape5.addBox(0F, 0F, 0F, 14, 15, 14);
		Shape5.setRotationPoint(-7F, 9F, -7F);
		Shape5.setTextureSize(128, 128);
		Shape5.mirror = true;
		this.setRotation(Shape5, 0F, 0F, 0F);
		Shape6 = new ModelRenderer(this, 0, 46);
		Shape6.addBox(0F, 0F, 0F, 14, 1, 14);
		Shape6.setRotationPoint(-7F, 23F, -7F);
		Shape6.setTextureSize(128, 128);
		Shape6.mirror = true;
		this.setRotation(Shape6, 0F, 0F, 0F);

		Shape5a = new ModelRenderer(this, 0, 17);
		Shape5a.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5a.setRotationPoint(-7F, 10F, -7F);
		Shape5a.setTextureSize(128, 128);
		Shape5a.mirror = true;
		this.setRotation(Shape5a, 0F, 0F, 0F);

		Shape5b = new ModelRenderer(this, 0, 17);
		Shape5b.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5b.setRotationPoint(-7F, 11F, -7F);
		Shape5b.setTextureSize(128, 128);
		Shape5b.mirror = true;
		this.setRotation(Shape5b, 0F, 0F, 0F);

		Shape5c = new ModelRenderer(this, 0, 17);
		Shape5c.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5c.setRotationPoint(-7F, 12F, -7F);
		Shape5c.setTextureSize(128, 128);
		Shape5c.mirror = true;
		this.setRotation(Shape5c, 0F, 0F, 0F);

		Shape5d = new ModelRenderer(this, 0, 17);
		Shape5d.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5d.setRotationPoint(-7F, 13F, -7F);
		Shape5d.setTextureSize(128, 128);
		Shape5d.mirror = true;
		this.setRotation(Shape5d, 0F, 0F, 0F);

		Shape5e = new ModelRenderer(this, 0, 17);
		Shape5e.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5e.setRotationPoint(-7F, 14F, -7F);
		Shape5e.setTextureSize(128, 128);
		Shape5e.mirror = true;
		this.setRotation(Shape5e, 0F, 0F, 0F);

		Shape5f = new ModelRenderer(this, 0, 17);
		Shape5f.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5f.setRotationPoint(-7F, 15F, -7F);
		Shape5f.setTextureSize(128, 128);
		Shape5f.mirror = true;
		this.setRotation(Shape5f, 0F, 0F, 0F);

		Shape5g = new ModelRenderer(this, 0, 17);
		Shape5g.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5g.setRotationPoint(-7F, 16F, -7F);
		Shape5g.setTextureSize(128, 128);
		Shape5g.mirror = true;
		this.setRotation(Shape5g, 0F, 0F, 0F);

		Shape5h = new ModelRenderer(this, 0, 17);
		Shape5h.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5h.setRotationPoint(-7F, 17F, -7F);
		Shape5h.setTextureSize(128, 128);
		Shape5h.mirror = true;
		this.setRotation(Shape5h, 0F, 0F, 0F);

		Shape5i = new ModelRenderer(this, 0, 17);
		Shape5i.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5i.setRotationPoint(-7F, 18F, -7F);
		Shape5i.setTextureSize(128, 128);
		Shape5i.mirror = true;
		this.setRotation(Shape5i, 0F, 0F, 0F);

		Shape5j = new ModelRenderer(this, 0, 17);
		Shape5j.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5j.setRotationPoint(-7F, 19F, -7F);
		Shape5j.setTextureSize(128, 128);
		Shape5j.mirror = true;
		this.setRotation(Shape5j, 0F, 0F, 0F);

		Shape5k = new ModelRenderer(this, 0, 17);
		Shape5k.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5k.setRotationPoint(-7F, 20F, -7F);
		Shape5k.setTextureSize(128, 128);
		Shape5k.mirror = true;
		this.setRotation(Shape5k, 0F, 0F, 0F);

		Shape5l = new ModelRenderer(this, 0, 17);
		Shape5l.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5l.setRotationPoint(-7F, 21F, -7F);
		Shape5l.setTextureSize(128, 128);
		Shape5l.mirror = true;
		this.setRotation(Shape5l, 0F, 0F, 0F);

		Shape5m = new ModelRenderer(this, 0, 17);
		Shape5m.addBox(0F, 0F, 0F, 14, 16, 14);
		Shape5m.setRotationPoint(-7F, 22F, -7F);
		Shape5m.setTextureSize(128, 128);
		Shape5m.mirror = true;
		this.setRotation(Shape5m, 0F, 0F, 0F);
	}

	@Override
	public void renderAll(List li, float phi)
	{
		this.setRenderPass();
		boolean full = (Boolean)li.get(0);
		int level = (Integer)li.get(1);
		boolean solid = (Boolean)li.get(2);
		if (solid) {
			Shape1.render(f5);
			Shape2.render(f5);
			Shape3.render(f5);
			Shape4.render(f5);
		}
		if (full) {
			switch(level) {
			case 0:
				Shape5m.render(f5);
				break;
			case 1:
				Shape5m.render(f5);
				break;
			case 2:
				Shape5l.render(f5);
				break;
			case 3:
				Shape5k.render(f5);
				break;
			case 4:
				Shape5j.render(f5);
				break;
			case 5:
				Shape5i.render(f5);
				break;
			case 6:
				Shape5h.render(f5);
				break;
			case 7:
				Shape5g.render(f5);
				break;
			case 8:
				Shape5f.render(f5);
				break;
			case 9:
				Shape5e.render(f5);
				break;
			case 10:
				Shape5d.render(f5);
				break;
			case 11:
				Shape5c.render(f5);
				break;
			case 12:
				Shape5b.render(f5);
				break;
			case 13:
				Shape5a.render(f5);
				break;
			case 14:
				Shape5.render(f5);
				break;
			}

		}
		if (solid)
			Shape6.render(f5);
	}


}
